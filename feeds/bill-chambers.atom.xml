<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>"The Personal Website &amp; Portfolio of Bill Chambers"</title><link href="http://www.billchambers.me/" rel="alternate"></link><link href="http://www.billchambers.me/feeds/bill-chambers.atom.xml" rel="self"></link><id>http://www.billchambers.me/</id><updated>2014-10-08T00:00:00+02:00</updated><entry><title>DataKindSF - Data Analysis for the Greater Good</title><link href="http://www.billchambers.me/DataKindSF_data_for_good.html" rel="alternate"></link><updated>2014-10-08T00:00:00+02:00</updated><author><name>Bill Chambers</name></author><id>tag:www.billchambers.me,2014-10-08:DataKindSF_data_for_good.html</id><summary type="html">&lt;p&gt;DataKindSF just got their start and the reception was incredible. There was a huge turn out of people wanting to contribute by using high impact skills for greater good. I found out about the program through &lt;a href="http://www.meetup.com/DataKind-SF-Bay-Area/"&gt;their meetup&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;What I found particularly interesting about the whole thing was the vast possibilities for improving the ways that non-profits do business. At Procore, I helped guide the direction of our data quality and was a led the large scale reset of our data architecture and this kind of critical thinking could really make a difference for a lot of organizations.&lt;/p&gt;
&lt;p&gt;Volunteering is typically a low impact activity. It obviously impacts individuals but the possibility to impact others at scale is particularly intriguing!&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.datakind.org/getinvolved/"&gt;Sign up on their website&lt;/a&gt;.&lt;/p&gt;</summary><category term="Data Science"></category><category term="Data"></category><category term="Non-Profits"></category></entry><entry><title>WorldCupChatter.com - Graphing Tweets in Real Time</title><link href="http://www.billchambers.me/World_Cup_Chatter.html" rel="alternate"></link><updated>2014-09-15T00:00:00+02:00</updated><author><name>Bill Chambers</name></author><id>tag:www.billchambers.me,2014-09-15:World_Cup_Chatter.html</id><summary type="html">&lt;p&gt;This was my first production experience with Node.js. There Are definitely some really interesting things about JavaScript on the backend that allow you to take advantage of events. That is namely what I tried to do with this project. Learn a little bit more about node.js, about streaming data and analysis, and offloading responsibility to the client.&lt;/p&gt;
&lt;p&gt;The framework I used was &lt;a href="http://socket.io/"&gt;socket.io&lt;/a&gt;. My knowledge is certainly introductory but it provided a simple way for me to communicate real time data between the client's browser as well as the server. I wrote up a small intro on the site to allow people to understand what was happening&lt;/p&gt;
&lt;p&gt;&lt;img alt="World Cup Chatter Graph" src="/static/world_cup_chatter_intro.jpg" /&gt;&lt;/p&gt;
&lt;h3&gt;The Code&lt;/h3&gt;
&lt;p&gt;The server is incredibly simple and essentially boils down to this code:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nx"&gt;io&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;connection&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;socket&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Connected...&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;stream&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;tweet&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;tweet&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;socket&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;emit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;new tweet&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;tweet&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;TWEET&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;With that server running we run everything else using D3.js to graph our tweets. The client runs a heavily modified version of &lt;a href="http://bost.ocks.org/mike/path/"&gt;Mike Bostock's path transitions examples&lt;/a&gt;. Concretely, every time the client receives a tweet from the server it pushes it to a list. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nx"&gt;socket&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;new tweet&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;tweet&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;tweet&lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;created_at&amp;#39;&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;parseTwitterDate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;tweet&lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;created_at&amp;#39;&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;master_tweet_list&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;tweet&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Received Tweet&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;That list is then filtered (did the tweet occur in the last second) and pushed onto the relevant list every 'tick', or every second. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;master_tweet_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;master_tweet_list&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;within1Second2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;master_tweet_list&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This all produces a graph like this as time continues.&lt;/p&gt;
&lt;p&gt;&lt;img alt="World Cup Chatter Graph" src="/static/world_cup_chatter.jpeg" /&gt;&lt;/p&gt;
&lt;p&gt;What's nice is D3.js provides us with some nice smoothing abilities, this allows us to smooth out the animation when we append to the list, the code is this. It's important to know that the x-axis moves with our data.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;var&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;d3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;scale&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;domain&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;duration&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;now&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;duration&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;range&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Beyond this, the code is more or less boilerplate. Obviously there's some styling, some rolling up of the layout but more or less everything important was happening here.&lt;/p&gt;
&lt;h3&gt;Challenges &amp;amp; Take-Aways&lt;/h3&gt;
&lt;p&gt;Real-time data is hard. Period. Twitter scale is also hard. Period.&lt;/p&gt;
&lt;p&gt;I didn't have a lot of money to shell out for the server at this point so sending information to more than 10-15 clients at once reduced the ability for my server to send out tweets effectively to all clients. &lt;/p&gt;
&lt;p&gt;Another issue was memory leaks. When I would leave my browser open for an extended period of time, I found quality and degradation in my map and pushing functions. Trying to analyze the time of 10,000 tweets at once was difficult for a browser and took longer than a second. This caused my graphs to be off at certain periods of time.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/anabranch/World-Cup-Chatter"&gt;Check out the project on Github.&lt;/a&gt;&lt;/p&gt;</summary><category term="World Cup"></category><category term="Twitter"></category><category term="Node.js"></category><category term="D3.js"></category></entry><entry><title>Evernote Hackathon</title><link href="http://www.billchambers.me/Evernote_Hackathon_-_EverDone.html" rel="alternate"></link><updated>2014-09-10T00:00:00+02:00</updated><author><name>Bill Chambers</name></author><id>tag:www.billchambers.me,2014-09-10:Evernote_Hackathon_-_EverDone.html</id><summary type="html">&lt;p&gt;Wow, Hackathons are an experience. Firstly I was amazed by the turn out, realistically probably 40 teams all competed in a 12 hour hackathon for &lt;a href="http://www.evernote.com"&gt;Evernote&lt;/a&gt; at the &lt;a href="http://eecs.berkeley.edu"&gt;Computer Science Department at Berkeley&lt;/a&gt;. I found the atmosphere to be supportive and fiercely competitive at the same time. Hackathon's are a strange creation and I've struggled to come up with a parallel in history. But that's for another post.&lt;/p&gt;
&lt;h3&gt;The Application - EverDone&lt;/h3&gt;
&lt;p&gt;The project we worked on was Everdone. Simply put, EverDone is an organizational assistant. Every Saturday we'll collect your notes from the week and place them into the EverDone notebook for you to easily know what your tasks are for the week.&lt;/p&gt;
&lt;p&gt;One list.
All your tasks.&lt;/p&gt;
&lt;p&gt;We also implemented a hashtag based organizing system, so you can write something like "#homework finish my paper" and we'll categorize it under homework.&lt;/p&gt;
&lt;p&gt;The user flow is relatively straightforward, we start off with the main page and introduce the application.&lt;/p&gt;
&lt;p&gt;&lt;img alt="EverDone" src="/static/everdone_login.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;After the OAuth cycle, we need to get the user's email in order to send them their to do list every week.&lt;/p&gt;
&lt;p&gt;&lt;img alt="EverDone" src="/static/everdone_authorize.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;Finally we give them an instant refresh, any to do created in the last week will get sent to their EverDone folder.&lt;/p&gt;
&lt;p&gt;&lt;img alt="EverDone" src="/static/everdone_success.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;You can check out the code on my &lt;a href="https://github.com/anabranch/Evernote-Hacks"&gt;Github&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;What did I learn?&lt;/h3&gt;
&lt;p&gt;I learned how intense hackathons are. it being my first one, I wasn't quite sure what to expect. There are a few shortcomings in our product that made it difficult for us to place.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It is incredible what we can be built in 13 hours.&lt;/li&gt;
&lt;li&gt;Our application, although built didn't demo very well. It's an invisible service that helps you keep track of your to dos. It wasn't something you would interact with directly, which we struggled to present effectively.&lt;/li&gt;
&lt;li&gt;You get nervous presenting in front of people. We didn't really prepare enough for our demonstration and were under-prepared.&lt;/li&gt;
&lt;li&gt;There are a lot of intelligent people at UC Berkeley!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There's also some interesting possibilities to building on this application. A mobile app integration could be a nice plus, if it basically pulled out all of your to dos, attached some metadata (which notebook &amp;amp; note) and you could organize them that way. Maybe some day!&lt;/p&gt;
&lt;p&gt;Overall I enjoyed the experience, and I think our application has real potential although we might need a pivot or two. I eagerly await my next Hackathon.&lt;/p&gt;</summary><category term="Product"></category><category term="Evernote"></category><category term="Hackathon"></category><category term="Python"></category></entry><entry><title>SurpriseHaiku - Discovering Unusual Haikus On Twitter</title><link href="http://www.billchambers.me/SurpriseHaiku.html" rel="alternate"></link><updated>2014-08-20T00:00:00+02:00</updated><author><name>Bill Chambers</name></author><id>tag:www.billchambers.me,2014-08-20:SurpriseHaiku.html</id><summary type="html">&lt;p&gt;This project is about 9 months old but it's still relevant and one that I wanted to write about now that I have this portfolio site.&lt;/p&gt;
&lt;h2&gt;About @SurpriseHaiku&lt;/h2&gt;
&lt;p&gt;SurpriseHaiku was an experiment that parsed random twitter tweets to see if they followed the Haiku cadence of 5 / 7 / 5 (syllables). I ran this experiment during the 2014 Olympics to try and focus around Olympics related tweets. This is one of my first applications (not scripts) that I built to learn more about the twitter API and to try some different packages.&lt;/p&gt;
&lt;p&gt;While the application is not running at this point, you can check out the historical tweets on &lt;a href="https://twitter.com/surprisehaiku"&gt;the twitter profile.&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Methodology&lt;/h3&gt;
&lt;p&gt;The simplest explanation is:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Normalize the tweets text&lt;/li&gt;
&lt;li&gt;Split it by syllable/ each word by syllable&lt;/li&gt;
&lt;li&gt;see if we get a 5/7/5 combination&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Identifying the syllables on the English language is tough. We've got a lot of different ways of pronouncing things not to mention crazy spellings and dealing with other languages. I use two methods to split up syllables:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Use a dictionary of Hyphenated words&lt;/li&gt;
&lt;li&gt;Use a hyphenator&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I then compared those values, if we had a dictionary entry I would use it, if not I would use what the hyphenator spit out.&lt;/p&gt;
&lt;h3&gt;Tools&lt;/h3&gt;
&lt;p&gt;The tools I used in this project are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Python&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.python.org/pypi/PyHyphen/2.0.5"&gt;PyHyphen&lt;/a&gt; which is the hyphenation library of LibreOffice and FireFox&lt;/li&gt;
&lt;li&gt;Tweepy for my Twitter API Integration&lt;/li&gt;
&lt;li&gt;Project Gutenberg Etext of Movy Hyphenator by Grady Ward (basically a dictionary of hyphenated words)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Notable Examples&lt;/h3&gt;
&lt;p&gt;Although not every tweet was successful, there were definitely some notable examples.&lt;/p&gt;
&lt;p&gt;This one really seems to flow although the sentence composition doesn't line up perfectly, the syllables do.
&lt;blockquote class="twitter-tweet" lang="en"&gt;&lt;p&gt;A &lt;a href="https://twitter.com/hashtag/haiku?src=hash"&gt;#haiku&lt;/a&gt;: &lt;a href="https://t.co/Nn55PyBqab"&gt;https://t.co/Nn55PyBqab&lt;/a&gt;&amp;#10;&amp;#10;Lets Show Why Baseball&amp;#10;Is The Best Sport RT if&amp;#10;you want Baseball back&lt;/p&gt;&amp;mdash; SurpriseHaiku (@surprisehaiku) &lt;a href="https://twitter.com/surprisehaiku/status/432752455831392258"&gt;February 10, 2014&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;&lt;/p&gt;
&lt;p&gt;I also ran this experiment during the Olympics, this one gave me a chuckle.
&lt;blockquote class="twitter-tweet" lang="en"&gt;&lt;p&gt;A &lt;a href="https://twitter.com/hashtag/haiku?src=hash"&gt;#haiku&lt;/a&gt;: &lt;a href="https://t.co/zei5yF4E2D"&gt;https://t.co/zei5yF4E2D&lt;/a&gt;&amp;#10;&amp;#10;every time they show&amp;#10;putin i get really&amp;#10;uncomfortable&lt;/p&gt;&amp;mdash; SurpriseHaiku (@surprisehaiku) &lt;a href="https://twitter.com/surprisehaiku/status/432752315594842112"&gt;February 10, 2014&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;&lt;/p&gt;
&lt;p&gt;As did this one
&lt;blockquote class="twitter-tweet" lang="en"&gt;&lt;p&gt;A &lt;a href="https://twitter.com/hashtag/haiku?src=hash"&gt;#haiku&lt;/a&gt;: &lt;a href="https://t.co/2PpXgTSshU"&gt;https://t.co/2PpXgTSshU&lt;/a&gt;&amp;#10;&amp;#10;Russia Putin Poses&amp;#10;as Defender of Christian&amp;#10;Civilization&lt;/p&gt;&amp;mdash; SurpriseHaiku (@surprisehaiku) &lt;a href="https://twitter.com/surprisehaiku/status/432750753199820800"&gt;February 10, 2014&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;&lt;/p&gt;
&lt;h3&gt;Challenges&lt;/h3&gt;
&lt;p&gt;As many know about natural language processing, it's really difficult. &lt;a href="http://people.ischool.berkeley.edu/~hearst/"&gt;Marti Hearst&lt;/a&gt;, my NLP professor at UC Berkeley has stressed that you can never get it all right and the more I've experimented the more I've realized that she is completely right.&lt;/p&gt;
&lt;p&gt;The challenges with this project is in NLP. Think of it this way, how do we know that RT means retweet without explicitly telling the computer that?&lt;/p&gt;
&lt;h3&gt;Improvements and take aways&lt;/h3&gt;
&lt;p&gt;I think there are a number of improvements that could be made but this was a short experiment, not a complete study.&lt;/p&gt;
&lt;p&gt;Firstly I think I could use some textual analysis to prevent tweets like this:&lt;/p&gt;
&lt;blockquote class="twitter-tweet" lang="en"&gt;&lt;p&gt;A &lt;a href="https://twitter.com/hashtag/haiku?src=hash"&gt;#haiku&lt;/a&gt;: &lt;a href="https://t.co/dnq4ji8nSw"&gt;https://t.co/dnq4ji8nSw&lt;/a&gt;&amp;#10;&amp;#10;I just dont see how&amp;#10;school is gonna be a part&amp;#10;of my life with the&lt;/p&gt;&amp;mdash; SurpriseHaiku (@surprisehaiku) &lt;a href="https://twitter.com/surprisehaiku/status/432738235840614400"&gt;February 10, 2014&lt;/a&gt;&lt;/blockquote&gt;

&lt;script async src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;

&lt;p&gt;The problem with this haiku is that it ends in "the". There's no continuity and it doesn't end logically. Using something like Markov Chains could help me out here.&lt;/p&gt;
&lt;p&gt;Other improvements include, automating deployment, ignoring tweets with a lot of gibberish or words that are likely to be wrong, automate adding new words to the dictionary, adding plurals to the dictionary.&lt;/p&gt;
&lt;p&gt;I learned a ton doing this project and hope to continue doing this sort of experimentation in the future.&lt;/p&gt;</summary><category term="Hyphenation"></category><category term="Twitter"></category><category term="Python"></category><category term="NLP"></category></entry><entry><title>UX Review - Habits in Timeful</title><link href="http://www.billchambers.me/UX_Review_-_Timeful_App.html" rel="alternate"></link><updated>2014-08-31T00:00:00+02:00</updated><author><name>Bill Chambers</name></author><id>tag:www.billchambers.me,2014-08-13:UX_Review_-_Timeful_App.html</id><summary type="html">&lt;p&gt;Timeful team,&lt;/p&gt;
&lt;p&gt;Great application. I use it everyday, several times a day! I’m a beast at a to do list, I’m just not so good at scheduling things or getting them on a calendar. This brought me to Timeful. I wanted to declare what I wanted to do on certain days or weekly or monthly, and I wanted Timeful to help me fill that out. There doesn’t exist an application where I can have that list of to dos and drag them onto the calendar with such ease. That’s why I like Timeful so much. In using the application I noticed a small irregularity I’d like to submit.&lt;/p&gt;
&lt;p&gt;I wanted to provide some feedback and ask a small definitional question.&lt;/p&gt;
&lt;p&gt;Why do you display a habit (with defined preferred days) differently than a to do that has to occur on a certain day?&lt;/p&gt;
&lt;p&gt;I’ll show you how I’ve arrived at that question and you all can decide if it’s worth your time learning more about. This is not about the color of the application or anything, just about the placement of the habit on the calendar and not the daily list too.&lt;/p&gt;
&lt;p&gt;The issue really popped up around daily habits.&lt;/p&gt;
&lt;p&gt;&lt;img alt="To Dos" src="/static/timeful_review_1.png" /&gt;&lt;/p&gt;
&lt;p&gt;Let’s take the example of exercise and programming. These are two things that I have set up in the exact same way. I want to do them 7 times a week, every single day. Please keep in mind that when I set this up Timeful does not allow me to do more, you are reinforcing that this is something that is to happen every single day. The enforcement is so strong I can’t even create habits that should occur more than once a day. The screens below are the walk through of creating that exercise habit.&lt;/p&gt;
&lt;p&gt;&lt;img alt="To Dos" src="/static/timeful_review_2.png" /&gt;&lt;/p&gt;
&lt;p&gt;There’s reinforcement that this is to occur every single day on every screen.&lt;/p&gt;
&lt;p&gt;&lt;img alt="To Dos" src="/static/timeful_review_3.png" /&gt;&lt;/p&gt;
&lt;p&gt;Timeful helpfully shows me the things that I want to do over the course of time which is super helpful. But then there is the “not scheduled” bit on the screen below. I don’t quite know what my week is going to look like so it’s difficult to schedule it right now. Although as we can see above (and below) it’s clearly something I want to do every day. &lt;/p&gt;
&lt;p&gt;&lt;img alt="To Dos" src="/static/timeful_review_4.png" /&gt;&lt;/p&gt;
&lt;p&gt;Now I go to look at my schedule today. I can see what I need to be doing. Timeful automatically start throwing habits and tasks onto my calendar as suggestions. It’s fantastic. I’ve got a list of my to dos for the day and suggestions as to when they should be scheduled. I can see what tasks I need to start knocking out for the day and what are good times to do them.&lt;/p&gt;
&lt;p&gt;&lt;img alt="To Dos" src="/static/timeful_review_5.png" /&gt;&lt;/p&gt;
&lt;p&gt;My task “pay for school” shows up in both locations, at the top of the app and also has a recommended time on my calendar. This is ideal behavior because it shows that it’s still not nailed down yet (until I accept the time).&lt;/p&gt;
&lt;p&gt;But wait, what about my habits? Those are things I need to do today, but I can’t see them above. I have to scroll through the entire day to see if all my habits are there because they don’t show up on the list even if I haven’t accepted their time. Why is a declared daily habit not showing up in my daily to do list? It’s already something I told you I want to do every day and it shows up on the calendar but not in the list. Daily habits should show up on the day’s to do list in addition to the calendar. As we can see above, I told Timeful I want to do it every day, why doesn’t it show up on the list?&lt;/p&gt;
&lt;p&gt;An unscheduled daily habit is much closer to a to do for a day. It’s something that I need to get nailed down. But you won’t put it in the top of the list unless I do one of two things. (Go back to the habits screen and schedule it for today or click the recommended time and drag it to the top list.)&lt;/p&gt;
&lt;p&gt;&lt;img alt="To Dos" src="/static/timeful_review_6.png" /&gt;&lt;/p&gt;
&lt;p&gt;Unfortunately my other daily habit of “Programming” is nowhere to be seen. Programming is a daily habit that I want to put on my calendar. However it doesn’t show up in my unscheduled section nor is there a recommended time for me to do it because my schedule is filled with other recommendations from Timeful. Now I may not realize that I can exercise later if it gives me an uninterrupted block of programming at that time. The only way that I can see that my daily habit of programming is missing is by jumping back to the list screen and seeing that programming is “not scheduled”. But why should I have to schedule it? I already told Timeful I wanted to do it 7 times a week on every day of the week.&lt;/p&gt;
&lt;p&gt;So here’s the situational review.&lt;/p&gt;
&lt;p&gt;I have specified a habit as something that I would like to complete everyday. However that habit will only show up every day on my calendar if your algorithm determines that I have time to perform this activity. If it doesn’t then that habit may not happen, crippling the habit. Now this isn’t a nightmare, but I have to move back to another screen to see my list of habits, review them, click into it to schedule a session for today (remember you enforced me previously to say that I wanted to do it every day already) then it gets on that days to do list and I can now be looking at my calendar and all the things I have to do today. Rinse and repeat for each daily habit.&lt;/p&gt;
&lt;p&gt;The fix I propose is simple. Add any habit that is declared as scheduled for each day of the week to each day of the week’s to do list like a task (it can be the color red like a habit but you get the point). You could abstract this further so that any habit that is declared to be preferred on a specific day shows up in the to do list and the calendar recommendations for that specific day. (if I declare something I want to happen once a week on sundays, have it show up on the to do list on sundays, don’t force me to schedule it for next sunday every time).&lt;/p&gt;
&lt;p&gt;One should not have to schedule a habit for everyday of the week when you already declared that you want to do a habit everyday of the week.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;The CEO of Timeful responded to my email in a professional manner and filled me in on some features that are up and coming. Definitely a company that is responsive to their users! My Hat is off to you &lt;a href="http://www.timeful.com"&gt;Timeful&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;</summary><category term="Product"></category><category term="UX"></category><category term="UI"></category></entry></feed>